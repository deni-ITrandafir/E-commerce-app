/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-12-31 00:09:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import java.util.Map;

public final class orders_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Map");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    // VerificÄ dacÄ utilizatorul este autentificat
	if (session.getAttribute("name") == null) {
        response.sendRedirect("login.jsp");
        return;
    }

    List<Map<String, String>> orders = (List<Map<String, String>>) request.getAttribute("orders");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Orders</title>\r\n");
      out.write("    <link href=\"/ddeStore/css/index.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("	    .search-bar {\r\n");
      out.write("	        display: flex;\r\n");
      out.write("	        align-items: center;\r\n");
      out.write("	        justify-content: flex-end;\r\n");
      out.write("	        margin-bottom: 20px;\r\n");
      out.write("	    }\r\n");
      out.write("	\r\n");
      out.write("	    .search-bar input[type=\"text\"] {\r\n");
      out.write("	        border-radius: 20px;\r\n");
      out.write("	        padding: 10px 15px;\r\n");
      out.write("	        border: 1px solid #ddd;\r\n");
      out.write("	        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	        width: 250px;\r\n");
      out.write("	        transition: all 0.3s ease;\r\n");
      out.write("	    }\r\n");
      out.write("	\r\n");
      out.write("	    .search-bar input[type=\"text\"]:focus {\r\n");
      out.write("	        border-color: #007bff;\r\n");
      out.write("	        outline: none;\r\n");
      out.write("	        box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);\r\n");
      out.write("	    }\r\n");
      out.write("	\r\n");
      out.write("	    .search-bar button {\r\n");
      out.write("	        color: white;\r\n");
      out.write("	        border: none;\r\n");
      out.write("	        border-radius: 0 20px 20px 0;\r\n");
      out.write("	        padding: 10px 20px;\r\n");
      out.write("	        margin-left: 10px;\r\n");
      out.write("	        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	        transition: all 0.3s ease;\r\n");
      out.write("	        transform: translateX(-70%);\r\n");
      out.write("	    }\r\n");
      out.write("	\r\n");
      out.write("	    .search-bar button:hover {\r\n");
      out.write("	        box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3);\r\n");
      out.write("	    }\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"d-flex\">\r\n");
      out.write("        <!-- Sidebar -->\r\n");
      out.write("        <div class=\"sidebar bg-dark text-white\">\r\n");
      out.write("            <div class=\"sidebar-header text-center py-4\">\r\n");
      out.write("                <img src=\"/ddeStore/assets/logo2.jpg\" alt=\"Logo\" class=\"img-fluid rounded-circle mb-2\" style=\"width: 80px;\">\r\n");
      out.write("                <h5>Admin Panel</h5>\r\n");
      out.write("            </div>\r\n");
      out.write("            <ul class=\"nav flex-column\">\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/DashboardServlet\">Dashboard</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/ProductServlet\">Produse</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/CategoryServlet\">Categorii</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/OrderServlet\">Comenzi</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/UserServlet\">Utilizatori</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item mt-4\">\r\n");
      out.write("                    <form action=\"/ddeStore/logout\" method=\"get\" style=\"text-align: center;\">\r\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-danger btn-logout\">Logout</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Content -->\r\n");
      out.write("        <div class=\"content flex-grow-1 p-4\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n");
      out.write("				    <h2>Comenzi</h2>\r\n");
      out.write("				    <!-- Bara de cautare -->\r\n");
      out.write("				   <div class=\"search-bar\">\r\n");
      out.write("					    <form action=\"/ddeStore/OrderServlet\" method=\"get\" class=\"d-flex\">\r\n");
      out.write("					        <input type=\"text\" name=\"searchId\" class=\"form-control me-2\" placeholder=\"Cauta numar Comanda\" aria-label=\"Search\" required>\r\n");
      out.write("					        <button type=\"submit\" class=\"btn btn-success\">Cauta</button>\r\n");
      out.write("					    </form>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("                \r\n");
      out.write("\r\n");
      out.write("                <!-- Tabel cu comenzile -->\r\n");
      out.write("                <table class=\"table table-striped\">\r\n");
      out.write("				    <thead>\r\n");
      out.write("				        <tr>\r\n");
      out.write("				            <th>ID</th>\r\n");
      out.write("				            <th>Data</th>\r\n");
      out.write("				            <th>Status</th>\r\n");
      out.write("				            <th>Total</th>\r\n");
      out.write("				            <th>Client</th>\r\n");
      out.write("				            <th>Actiuni</th>\r\n");
      out.write("				        </tr>\r\n");
      out.write("				    </thead>\r\n");
      out.write("					    <tbody>\r\n");
      out.write("					    ");
 if (orders != null && !orders.isEmpty()) { 
      out.write("\r\n");
      out.write("					        ");
 for (Map<String, String> order : orders) { 
      out.write("\r\n");
      out.write("					            <tr>\r\n");
      out.write("					                <td>");
      out.print( order.get("ID_Comanda") != null ? order.get("ID_Comanda") : "N/A" );
      out.write("</td>\r\n");
      out.write("					                <td>");
      out.print( order.get("DataComanda") != null ? order.get("DataComanda") : "N/A" );
      out.write("</td>\r\n");
      out.write("					                <td>");
      out.print( order.get("Status") != null ? order.get("Status") : "N/A" );
      out.write("</td>\r\n");
      out.write("					                <td>");
      out.print( order.get("Total") != null ? order.get("Total") : "0.00" );
      out.write("</td>\r\n");
      out.write("					                <td>");
      out.print( order.get("ClientName") != null ? order.get("ClientName") : "N/A" );
      out.write("</td>\r\n");
      out.write("					                <td>\r\n");
      out.write("									    <!-- Buton VerificÄ -->\r\n");
      out.write("									    <form action=\"/ddeStore/OrderServlet\" method=\"post\" style=\"display:inline-block;\">\r\n");
      out.write("									        <input type=\"hidden\" name=\"action\" value=\"verifica\">\r\n");
      out.write("									        <input type=\"hidden\" name=\"orderId\" value=\"");
      out.print( order.get("ID_Comanda") );
      out.write("\">\r\n");
      out.write("									        <button type=\"submit\" class=\"btn btn-success btn-sm\"\r\n");
      out.write("									            ");
 if ("anulata".equals(order.get("Status"))) { 
      out.write("disabled");
 } 
      out.write(">\r\n");
      out.write("									            <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:20px; heigh:20px\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-2 h-2\">\r\n");
      out.write("												  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\" />\r\n");
      out.write("												</svg>\r\n");
      out.write("									            Verifica\r\n");
      out.write("									        </button>\r\n");
      out.write("									    </form>\r\n");
      out.write("									\r\n");
      out.write("									    <!-- Buton AnuleazÄ -->\r\n");
      out.write("									    <form action=\"/ddeStore/OrderServlet\" method=\"post\" style=\"display:inline-block;\">\r\n");
      out.write("									        <input type=\"hidden\" name=\"action\" value=\"anuleaza\">\r\n");
      out.write("									        <input type=\"hidden\" name=\"orderId\" value=\"");
      out.print( order.get("ID_Comanda") );
      out.write("\">\r\n");
      out.write("									        <button type=\"submit\" class=\"btn btn-danger btn-sm\"\r\n");
      out.write("									            ");
 if ("anulata".equals(order.get("Status"))) { 
      out.write("disabled");
 } 
      out.write(">\r\n");
      out.write("									            <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:20px; heigh:20px\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"size-6\">\r\n");
      out.write("												  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\" />\r\n");
      out.write("												</svg>\r\n");
      out.write("									            \r\n");
      out.write("									            Anuleaza\r\n");
      out.write("									        </button>\r\n");
      out.write("									    </form>\r\n");
      out.write("									    <!-- Buton Detalii Comanda -->\r\n");
      out.write("									    <form action=\"/ddeStore/OrderDetailsServlet\" method=\"get\" style=\"display:inline-block;\">\r\n");
      out.write("									        <input type=\"hidden\" name=\"orderId\" value=\"");
      out.print( order.get("ID_Comanda") );
      out.write("\">\r\n");
      out.write("									        <button type=\"submit\" class=\"btn btn-warning btn-sm\">\r\n");
      out.write("									        	<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:20px; heigh:20px\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"size-6\">\r\n");
      out.write("												  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Zm3.75 11.625a2.625 2.625 0 1 1-5.25 0 2.625 2.625 0 0 1 5.25 0Z\" />\r\n");
      out.write("												</svg>\r\n");
      out.write("									        	Detalii Comanda\r\n");
      out.write("									        </button>\r\n");
      out.write("									    </form>\r\n");
      out.write("									    \r\n");
      out.write("									</td>\r\n");
      out.write("					            </tr>\r\n");
      out.write("					        ");
 } 
      out.write("\r\n");
      out.write("					    ");
 } else { 
      out.write("\r\n");
      out.write("					        <tr>\r\n");
      out.write("					            <td colspan=\"6\" class=\"text-center\">Comanda nu este disponibila.</td>\r\n");
      out.write("					        </tr>\r\n");
      out.write("					    ");
 } 
      out.write("\r\n");
      out.write("					</tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	    \r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
