/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2025-01-09 22:49:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import java.util.Map;

public final class editProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Map");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    Map<String, String> product = (Map<String, String>) request.getAttribute("product");
    List<Map<String, String>> categories = (List<Map<String, String>>) request.getAttribute("categories");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Editare Produs</title>\r\n");
      out.write("\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"/ddeStore/css/index.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .preview-img {\r\n");
      out.write("            width: 50px;\r\n");
      out.write("            height: 50px;\r\n");
      out.write("            object-fit: cover;\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .remove-btn {\r\n");
      out.write("            background-color: red;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 3px;\r\n");
      out.write("            padding: 2px 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"d-flex\">\r\n");
      out.write("	<!-- Sidebar -->\r\n");
      out.write("        <div class=\"sidebar bg-dark text-white\">\r\n");
      out.write("            <div class=\"sidebar-header text-center py-4 \">\r\n");
      out.write("                <img src=\"/ddeStore/assets/logo2.jpg\" alt=\"Logo\" class=\"img-fluid rounded-circle  mb-2\" style=\"width: 80px;\">\r\n");
      out.write("                <h5>Admin Panel</h5>\r\n");
      out.write("            </div>\r\n");
      out.write("            <ul class=\"nav flex-column \">\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/DashboardServlet\">Dashboard</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/ProductServlet\">Produse</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/CategoryServlet\">Categorii</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/OrderServlet\">Comenzi</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link text-white\" href=\"/ddeStore/UserServlet\">Utilizatori</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item mt-4\">\r\n");
      out.write("                    <form action=\"/ddeStore/logout\" method=\"get\" style=\"text-align: center;\">\r\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-danger btn-logout\">Logout</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("	    <div class=\"container mt-5\">\r\n");
      out.write("	        <h2>Editare Produs</h2>\r\n");
      out.write("	        <form action=\"/ddeStore/EditProductServlet\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("	            <input type=\"hidden\" name=\"idProdus\" value=\"");
      out.print( product.get("ID_Produs") );
      out.write("\">\r\n");
      out.write("	\r\n");
      out.write("	            <!-- Categorie -->\r\n");
      out.write("	            <div class=\"mb-3\">\r\n");
      out.write("	                <label for=\"idCategorie\" class=\"form-label\">Categorie</label>\r\n");
      out.write("	                <select class=\"form-select\" id=\"idCategorie\" name=\"idCategorie\" required>\r\n");
      out.write("	                    ");
 
	                        for (Map<String, String> category : categories) {
	                    
      out.write("\r\n");
      out.write("	                    <option value=\"");
      out.print( category.get("ID_Categorie") );
      out.write("\" \r\n");
      out.write("	                        ");
      out.print( product.get("ID_Categorie").equals(category.get("ID_Categorie")) ? "selected" : "" );
      out.write(">\r\n");
      out.write("	                        ");
      out.print( category.get("NumeCategorie") );
      out.write("\r\n");
      out.write("	                    </option>\r\n");
      out.write("	                    ");
 } 
      out.write("\r\n");
      out.write("	                </select>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <!-- Brand -->\r\n");
      out.write("	            <div class=\"mb-3\">\r\n");
      out.write("	                <label for=\"brand\" class=\"form-label\">Brand</label>\r\n");
      out.write("	                <input type=\"text\" class=\"form-control\" id=\"brand\" name=\"brand\" value=\"");
      out.print( product.get("Brand") );
      out.write("\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <!-- Model -->\r\n");
      out.write("	            <div class=\"mb-3\">\r\n");
      out.write("	                <label for=\"model\" class=\"form-label\">Model</label>\r\n");
      out.write("	                <input type=\"text\" class=\"form-control\" id=\"model\" name=\"model\" value=\"");
      out.print( product.get("Model") );
      out.write("\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <!-- Memorie -->\r\n");
      out.write("	            <div class=\"mb-3\">\r\n");
      out.write("	                <label for=\"memorie\" class=\"form-label\">Memorie</label>\r\n");
      out.write("	                <input type=\"text\" class=\"form-control\" id=\"memorie\" name=\"memorie\" value=\"");
      out.print( product.get("Memorie") );
      out.write("\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <!-- Culoare -->\r\n");
      out.write("	            <div class=\"mb-3\">\r\n");
      out.write("	                <label for=\"culoare\" class=\"form-label\">Culoare</label>\r\n");
      out.write("	                <input type=\"text\" class=\"form-control\" id=\"culoare\" name=\"culoare\" value=\"");
      out.print( product.get("Culoare") );
      out.write("\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <!-- Pret -->\r\n");
      out.write("	            <div class=\"mb-3\">\r\n");
      out.write("	                <label for=\"pret\" class=\"form-label\">PreÈ</label>\r\n");
      out.write("	                <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"pret\" name=\"pret\" value=\"");
      out.print( product.get("Pret") );
      out.write("\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <!-- Stoc -->\r\n");
      out.write("	            <div class=\"mb-3\">\r\n");
      out.write("	                <label for=\"stoc\" class=\"form-label\">Stoc</label>\r\n");
      out.write("	                <input type=\"number\" class=\"form-control\" id=\"stoc\" name=\"stoc\" value=\"");
      out.print( product.get("Stoc") );
      out.write("\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <!-- Imagini -->\r\n");
      out.write("	            <div class=\"mb-3\">\r\n");
      out.write("	                <label class=\"form-label\">Imagini</label>\r\n");
      out.write("	                <div>\r\n");
      out.write("	                    ");
 if (product.get("Imagine") != null && !product.get("Imagine").isEmpty()) { 
	                        String[] images = product.get("Imagine").split(",");
	                        for (String image : images) {
	                    
      out.write("\r\n");
      out.write("	                    <div class=\"d-flex align-items-center mb-2\">\r\n");
      out.write("	                        <img src=\"/ddeStore/uploads/");
      out.print( image );
      out.write("\" class=\"preview-img\" alt=\"");
      out.print( image );
      out.write("\">\r\n");
      out.write("	                        <button type=\"button\" class=\"remove-btn\">Sterge</button>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    ");
 } } 
      out.write("\r\n");
      out.write("	                </div>\r\n");
      out.write("	                <input type=\"file\" class=\"form-control\" id=\"imagini\" name=\"imagini\" multiple>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	            <button type=\"submit\" class=\"btn btn-primary\">Salveaza</button>\r\n");
      out.write("	            <a href=\"/ddeStore/ProductServlet\" class=\"btn btn-secondary\">Anuleaza</a>\r\n");
      out.write("	        </form>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    \r\n");
      out.write("	    ");

		    String success = (String) request.getAttribute("success");
		    if (success != null) {
		
      out.write("\r\n");
      out.write("		    <div class=\"alert alert-success alert-dismissible show\" role=\"alert\" id=\"success-alert\" \r\n");
      out.write("		        style=\"position: fixed; bottom: 20px; right: 20px; z-index: 1050;\">\r\n");
      out.write("		        ");
      out.print( success );
      out.write("\r\n");
      out.write("		    </div>\r\n");
      out.write("		    <script>\r\n");
      out.write("		        setTimeout(() => {\r\n");
      out.write("		            const alert = document.getElementById('success-alert');\r\n");
      out.write("		            if (alert) {\r\n");
      out.write("		                alert.classList.remove('show');\r\n");
      out.write("		                alert.classList.add('fade');\r\n");
      out.write("		                setTimeout(() => alert.remove(), 300); // EliminÄ elementul din DOM\r\n");
      out.write("		            }\r\n");
      out.write("		        }, 3000); // Mesajul dispare dupÄ 3 secunde\r\n");
      out.write("		\r\n");
      out.write("		        // RedirecÈioneazÄ dupÄ 3 secunde\r\n");
      out.write("		        setTimeout(() => {\r\n");
      out.write("		            window.location.href = \"/ddeStore/ProductServlet\";\r\n");
      out.write("		        }, 3000);\r\n");
      out.write("		    </script>\r\n");
      out.write("		");

		    }
		
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
