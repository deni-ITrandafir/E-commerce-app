/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-12-29 00:55:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class registration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("<title>Sign Up - DDE store</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Font Icon -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"fonts/material-icon/css/material-design-iconic-font.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Main css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bonus.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"alert/dist/sweetalert.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<input type=\"hidden\" id=\"status\" value=\"");
      out.print( request.getAttribute("status") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("	<div class=\"background\"\r\n");
      out.write("			style=\"background: url(./assets/bkg-2.jpg) no-repeat center center; background-size: cover; \">\r\n");
      out.write("    <div class=\"login-container\">\r\n");
      out.write("        <h2 class=\"login-title\">Sign up</h2>\r\n");
      out.write("        <form method=\"post\" action=\"register\">\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"first-name\"></label>\r\n");
      out.write("                <input type=\"text\" name=\"first-name\" id=\"first-name\" placeholder=\"Enter your first name\" />\r\n");
      out.write("                <i class=\"icon zmdi zmdi-account\"></i>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"last-name\"></label>\r\n");
      out.write("                <input type=\"text\" name=\"last-name\" id=\"last-name\" placeholder=\"Enter your last name\" />\r\n");
      out.write("                <i class=\"icon zmdi zmdi-account\"></i>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"email\"></label>\r\n");
      out.write("                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter your email\" />\r\n");
      out.write("                <i class=\"icon zmdi zmdi-email\"></i>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"pass\"></label>\r\n");
      out.write("                <input type=\"password\" name=\"pass\" id=\"pass\" placeholder=\"Enter your password\" />\r\n");
      out.write("                <i class=\"icon zmdi zmdi-lock\"></i>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"re_pass\"></label>\r\n");
      out.write("                <input type=\"password\" name=\"re_pass\" id=\"re_pass\" placeholder=\"Repeat your password\" />\r\n");
      out.write("                <i class=\"icon zmdi zmdi-lock-outline\"></i>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-container\">\r\n");
      out.write("                <label for=\"contact\"></label>\r\n");
      out.write("                <input type=\"text\" name=\"contact\" id=\"contact\" placeholder=\"Enter your phone number\" />\r\n");
      out.write("                <i class=\"icon zmdi zmdi-phone\"></i>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- <div class=\"options\">\r\n");
      out.write("                <label>\r\n");
      out.write("                    <input type=\"checkbox\" name=\"agree-term\" id=\"agree-term\" />\r\n");
      out.write("                    I agree to all statements in <a href=\"#\" class=\"term-service\">Terms of service</a>\r\n");
      out.write("                </label>\r\n");
      out.write("            </div> -->\r\n");
      out.write("            \r\n");
      out.write("            <input type=\"submit\" name=\"signup\" id=\"signup\"\r\n");
      out.write("					class=\" btn-login\" value=\"Register\" />\r\n");
      out.write("        </form>\r\n");
      out.write("        <p class=\"register-text\">\r\n");
      out.write("            Already a member? <a href=\"login.jsp\">Log in</a>\r\n");
      out.write("        </p>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<!-- JS -->\r\n");
      out.write("	<script src=\"vendor/jquery/jquery.min.js\"></script>\r\n");
      out.write("	<script src=\"js/main.js\"></script>\r\n");
      out.write("	<script src = \"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script> \r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("<script> \r\n");
      out.write("	var status = document.getElementById(\"status\").value;\r\n");
      out.write("	if(status == \"success\"){\r\n");
      out.write("		swal(\"Congrats\", \"Account Created Successfully\", \"success\"); \r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<!-- This templates was made by Colorlib (https://colorlib.com) -->\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
